MAKEFILE_CONFIGS_DIR := $(dir $(lastword $(MAKEFILE_LIST)))

ifeq ($(origin CC),default)
CC	= gcc
endif
ifeq ($(origin AS),default)
AS	= gcc
endif
ifeq ($(origin AR),default)
AR	= ar
endif
ifeq ($(origin ARFLAGS),default)
ARFLAGS = rcs
endif
ifeq ($(origin LD),default)
LD	= ld
endif
ifeq ($(origin CXX),default)
CXX = g++
endif
OBJCOPY ?= objcopy

# Workaround for clang: unlike gcc, 'clang -dumpmachine' reports 'machine-vendor-operatingsystem'
# and we want 'machine-operatingsystem'.
# See e.g. https://bugs.launchpad.net/ubuntu/+source/clang/+bug/1827175
ifeq ($(findstring clang,$(CC)),clang)
    SYS ?= $(shell $(CC) -dumpmachine | cut -d- -f1,3-)
else
    SYS ?= $(shell $(CC) -dumpmachine)
endif
export SYS

ARCH := $(word 1,$(subst -, -, $(SYS)))
# normalize to ppc64
ARCH_EXP := $(ARCH)
ifeq ($(ARCH),powerpc64le)
    ARCH := ppc64
endif
ifeq ($(ARCH),ppc64le)
    ARCH := ppc64
endif
ifneq ($(ARCH),$(filter $(ARCH),x86_64 ppc64))
$(error $(ARCH) is not supported)
endif

# where libraries are found, e.g., /lib/x86_64-linux-gnu
ARCH_LIBDIR := /lib/$(SYS)
ifeq ($(wildcard $(ARCH_LIBDIR)/*),)
    ARCH_LIBDIR := /lib64
endif

# part of filenames and dirs like /usr/lib/gcc/$(ARCH_LONG)
ARCH_LONG := $(SYS)

DEBUG ?=
OPTIMIZE ?= $(if $(DEBUG),,1)
UBSAN ?=
ASAN ?=

ifeq ($(DEBUGOPT),1)
DEBUG = 1
OPTIMIZE = 1
endif

export DEBUG
export OPTIMIZE
export UBSAN
export ASAN

CFLAGS += -Wall -std=c11 -Wmissing-prototypes
CXXFLAGS += -Wall -std=c++14

ifeq ($(DEBUG),1)
CFLAGS += -gdwarf-2 -g3
CXXFLAGS += -gdwarf-2 -g3
ASFLAGS += -gdwarf-2 -g3
CFLAGS += -DDEBUG
ASFLAGS += -DDEBUG
CXXFLAGS += -DDEBUG
endif

ifeq ($(OPTIMIZE),1)
CFLAGS += -O2
CXXFLAGS += -O2
endif

ifeq ($(WERROR),1)
CFLAGS += -Werror
CXXFLAGS += -Werror
endif

CFLAGS_SANITIZERS =

ifeq ($(UBSAN),1)
CFLAGS_SANITIZERS += -fsanitize=undefined -fno-sanitize-recover=undefined -DUBSAN
endif

ifeq ($(ASAN),1)
ASAN_SHADOW_START = 0x18000000000
CFLAGS_SANITIZERS += \
    -fsanitize=address \
    -fno-sanitize-link-runtime \
    -mllvm -asan-mapping-offset=$(ASAN_SHADOW_START) \
    -mllvm -asan-use-after-return=0 \
    -mllvm -asan-stack=0 \
    -mllvm -asan-globals=0 \
    -DASAN
endif

MAKEFILE_CONFIGS_INCLUDED = y
include $(MAKEFILE_CONFIGS_DIR)/Makefile.Host
